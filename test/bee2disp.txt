# Prerequisite OAuth2
Doorkeeper::Application.create!({name: 'master', uid: 'rkgYEN5QXmsFcwbH-awWoo9Q5BJd6vdGoyzRHI0lOZs', secret: 'AoaoR9-Aj7woafUW7hnARWVbNqaBxI
NiqteyMDMuBoA', redirect_uri: 'urn:ietf:wg:oauth:2.0:oob', scopes: 'admin write read'})

Doorkeeper::Application.create!({name: 'oydid', redirect_uri: 'urn:ietf:wg:oauth:2.0:oob', scopes: 'write read'})

Doorkeeper::Application.create!({name: 'oydid-vc', redirect_uri: 'urn:ietf:wg:oauth:2.0:oob', scopes: 'read'})


# Create Stakeholders ====
# use data in dc-babelfish/test

# create Use Case Organization ----
cat honey_org.json | curl -H "Content-Type: application/json" -d @- -X POST https://babelfish.data-container.net/organization/

# read org
curl https://babelfish.data-container.net/organization/1
curl https://babelfish.data-container.net/organization/1/meta
curl "https://babelfish.data-container.net/api/data?dri=zQmZLBvttK9kK4yyr2JrpxEKJk2XSHsDjzVAR3M8LjrVbHw"

# create org DID
echo '[{"id":"#payload", "type": "data", "serviceEndpoint": "https://babelfish.data-container.net/api/data?dri=zQmZLBvttK9kK4yyr2JrpxEKJk2XSHsDjzVAR3M8LjrVbHw"}]' | oydid create --doc-pwd orgpwd --rev-pwd orgpwd2 -l babelfish.data-container.net -s
# DID: did:oyd:zQmNoUmZbq17CZZpP4uGNNS9mQeodPKuJHhvezWSeNd9knt%40babelfish.data-container.net

# create Honey User ---
cat honey_user.json | curl -H "Content-Type: application/json" -d @- -X POST https://babelfish.data-container.net/user/

# read user
curl https://babelfish.data-container.net/user/2
curl https://babelfish.data-container.net/user/2/meta

# create user DID
echo '[{"id":"#payload", "type": "data", "serviceEndpoint": "https://babelfish.data-container.net/api/data?dri=zQmU3jzkjAyT8Uz9qCDB4hkG41vyy2fqraPVh4uSXhFxwuC"}]' | oydid create --doc-pwd beepwd --rev-pwd beepwd2 -l babelfish.data-container.net -s
# DID: did:oyd:zQme7k5u6XryvmnUkS1bRBrbP6CrzHMcjKP3qduN9EkCFmp%40babelfish.data-container.net
# DID: did:oyd:zQmWJc25pZ2d5D154wHtKiB8FvB6niFpHihVs9RRCyDoWjd%40babelfish.data-container.net

# create DISP ---
cat honey_disp.json  | curl -H "Content-Type: application/json" -d @- -X POST https://babelfish.data-container.net/user/

# read DISP
curl https://babelfish.data-container.net/user/3
curl https://babelfish.data-container.net/user/3/meta

# create DISP DID
echo '[{"id":"#payload", "type": "data", "serviceEndpoint": "https://babelfish.data-container.net/api/data?dri=zQmc2FnJAeNEYdaF4V1MTy7VAWamhp388xuH6mTczWadoBK"}]' | oydid create --doc-pwd dispwd --rev-pwd dispwd2 -l babelfish.data-container.net -s
# DID: did:oyd:zQmY75fpVSzXAe9VFNf6UxVW2t8DYqtmQbtBGmqcEytZW1z%40babelfish.data-container.net
# DID: did:oyd:zQmWTp4ZyMmddwwuFz3reYBMHfm6jpA3ECs6sGm2F3Z5G8n%40babelfish.data-container.net


# Build D2A for data exchange between honey user and DISP ====
# Credential Subject (for D2A between honey user and DISP)
[{
  "id": "did:oyd:zQme7k5u6XryvmnUkS1bRBrbP6CrzHMcjKP3qduN9EkCFmp%40babelfish.data-container.net",
  "type": "source",
  "name": "Hans Huber"
},{
  "id": "did:oyd:zQmY75fpVSzXAe9VFNf6UxVW2t8DYqtmQbtBGmqcEytZW1z%40babelfish.data-container.net",
  "type": "controller",
  "name": "Data Intermediary"
},{
  "id": "did:oyd:zQmY75fpVSzXAe9VFNf6UxVW2t8DYqtmQbtBGmqcEytZW1z%40babelfish.data-container.net",
  "dataAgreement": {
    "purposes":[{
      "purpose_desription": "I obey to D2A"
    }]
  }
}]

# honey user signs Credential Subject
echo '[{"id":"did:oyd:zQme7k5u6XryvmnUkS1bRBrbP6CrzHMcjKP3qduN9EkCFmp%40babelfish.data-container.net","type":"source","name":"Hans Huber"},{"id":"did:oyd:zQmY75fpVSzXAe9VFNf6UxVW2t8DYqtmQbtBGmqcEytZW1z%40babelfish.data-container.net","type":"controller","name":"Data Intermediary"},{"id":"did:oyd:zQmY75fpVSzXAe9VFNf6UxVW2t8DYqtmQbtBGmqcEytZW1z%40babelfish.data-container.net","dataAgreement":{"purposes":[{"purpose_desription":"I obey to D2A"}]}}]' | \
oydid vc-proof --issuer did:oyd:zQme7k5u6XryvmnUkS1bRBrbP6CrzHMcjKP3qduN9EkCFmp%40babelfish.data-container.net --doc-pwd beepwd

# DISP signs Credential Subject
echo '[{"id":"did:oyd:zQme7k5u6XryvmnUkS1bRBrbP6CrzHMcjKP3qduN9EkCFmp%40babelfish.data-container.net","type":"source","name":"Hans Huber"},{"id":"did:oyd:zQmY75fpVSzXAe9VFNf6UxVW2t8DYqtmQbtBGmqcEytZW1z%40babelfish.data-container.net","type":"controller","name":"Data Intermediary"},{"id":"did:oyd:zQmY75fpVSzXAe9VFNf6UxVW2t8DYqtmQbtBGmqcEytZW1z%40babelfish.data-container.net","dataAgreement":{"purposes":[{"purpose_desription":"I obey to D2A"}]}}]' | \
oydid vc-proof --issuer did:oyd:zQmY75fpVSzXAe9VFNf6UxVW2t8DYqtmQbtBGmqcEytZW1z%40babelfish.data-container.net --doc-pwd dispwd

# composed VC with proof from signed Credential Subject
echo '{"issuer":["did:oyd:zQme7k5u6XryvmnUkS1bRBrbP6CrzHMcjKP3qduN9EkCFmp%40babelfish.data-container.net","did:oyd:zQmY75fpVSzXAe9VFNf6UxVW2t8DYqtmQbtBGmqcEytZW1z%40babelfish.data-container.net"],"credentialSubject":[{"id":"did:oyd:zQme7k5u6XryvmnUkS1bRBrbP6CrzHMcjKP3qduN9EkCFmp%40babelfish.data-container.net","type":"source","name":"Hans Huber"},{"id":"did:oyd:zQmY75fpVSzXAe9VFNf6UxVW2t8DYqtmQbtBGmqcEytZW1z%40babelfish.data-container.net","type":"controller","name":"Data Intermediary"},{"id":"did:oyd:zQmY75fpVSzXAe9VFNf6UxVW2t8DYqtmQbtBGmqcEytZW1z%40babelfish.data-container.net","dataAgreement":{"purposes":[{"purpose_desription":"I obey to D2A"}]}}],"proof":[{"type":"Ed25519Signature2020","verificationMethod":"did:oyd:zQme7k5u6XryvmnUkS1bRBrbP6CrzHMcjKP3qduN9EkCFmp%40babelfish.data-container.net","proofPurpose":"assertionMethod","proofValue":"zqdKj8HrVeAqerwrVN3ed2pJbwWamRBNSPBLELbkxS8n9Z2RvDzxmyt1K9b94We75TJNrSC6ye4z7Kx9Z5ouf3Ho"},{"type":"Ed25519Signature2020","verificationMethod":"did:oyd:zQmY75fpVSzXAe9VFNf6UxVW2t8DYqtmQbtBGmqcEytZW1z%40babelfish.data-container.net","proofPurpose":"assertionMethod","proofValue":"z2pU1pp8XrG3F1WM4PmMJosoSepZz5jpASLvGExFbbGPy4graJefZH86ZTWxw5v4BEGoYwdVA7mV3EMkZAtxRZYVt"}]}' | \
oydid vc-push -l babelfish.data-container.net

# Verifiable Credential is now available at https://babelfish.data-container.net/credentials/zQmeCoAr67eoVdYpcvxe15djaDULQixJSdtRJhfEzkvq4H7
# only accessible by DISP
oydid read-vc zQmeCoAr67eoVdYpcvxe15djaDULQixJSdtRJhfEzkvq4H7 -l babelfish.data-container.net \
        --holder did:oyd:zQmY75fpVSzXAe9VFNf6UxVW2t8DYqtmQbtBGmqcEytZW1z%40babelfish.data-container.net \
        --doc-pwd dispwd

# make VC publicly available as Verifiable Presentation
oydid read-vc zQmeCoAr67eoVdYpcvxe15djaDULQixJSdtRJhfEzkvq4H7 -l babelfish.data-container.net \
        --holder did:oyd:zQmY75fpVSzXAe9VFNf6UxVW2t8DYqtmQbtBGmqcEytZW1z%40babelfish.data-container.net \
        --doc-pwd dispwd | \
oydid vp-push -l babelfish.data-container.net \
        --holder did:oyd:zQmY75fpVSzXAe9VFNf6UxVW2t8DYqtmQbtBGmqcEytZW1z%40babelfish.data-container.net \
        --doc-pwd dispwd


# create HoneyBatch Object ====
# create collection ---
cat col.json | curl -H "Content-Type: application/json" -d @- -X POST https://babelfish.data-container.net/collection/

# read collection
curl https://babelfish.data-container.net/collection/4
curl https://babelfish.data-container.net/collection/4/meta

# create object (honey batch) ---
# create object
cat obj.json | curl -H "Content-Type: application/json" -d @- -X POST https://babelfish.data-container.net/object/

# write payload (incl. reference to D2A)
cat honey_data.json | curl -H "Content-Type: application/json" -d @- -X PUT https://babelfish.data-container.net/object/5/write

# read object
curl https://babelfish.data-container.net/object/5
curl https://babelfish.data-container.net/object/5/meta
curl https://babelfish.data-container.net/object/5/read

# create DID for honey batch
echo '[{"id":"#payload", "type": "data", "serviceEndpoint": "https://babelfish.data-container.net/api/data?dri=zQmNbJonvpqhv9Vf3GRXMeQN9PurJsnYq3M4BaQSw2PWKkd"}]' | oydid create --doc-pwd hbpwd --rev-pwd hbpwd2 -l babelfish.data-container.net -s
# DID: did:oyd:zQme9vsJe1HjfUSBXNccaKJ5m7qBCjKUR7qBn2hXDCsyh6U%40babelfish.data-container.net

